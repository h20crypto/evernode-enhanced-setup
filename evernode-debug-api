#!/bin/bash

GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}🔍 Enhanced Evernode API Debug Tool${NC}"
echo "====================================="
echo ""

echo -e "${YELLOW}Testing Evernode CLI commands:${NC}"
echo -e "${GREEN}evernode config totalins:${NC}"
evernode config totalins 2>/dev/null || echo "  Command not available"

echo -e "${GREEN}evernode config activeins:${NC}"
evernode config activeins 2>/dev/null || echo "  Command not available"

echo -e "${GREEN}evernode info:${NC}"
evernode info 2>/dev/null | head -10 || echo "  Command not available"

echo -e "${GREEN}evernode config leaseamt:${NC}"
evernode config leaseamt 2>/dev/null || echo "  Command not available"

echo -e "${GREEN}evernode config resources:${NC}"
evernode config resources 2>/dev/null || echo "  Command not available"

echo ""
echo -e "${YELLOW}Testing container counting methods:${NC}"
echo -e "${GREEN}Sashimono users total:${NC}"
SASHI_COUNT=$(getent passwd | grep sashi | wc -l)
echo "  Found: $SASHI_COUNT users"

echo -e "${GREEN}Sashimono user list:${NC}"
getent passwd | grep sashi | cut -d: -f1 | head -5

echo -e "${GREEN}Actual running containers:${NC}"
TOTAL_CONTAINERS=0
for user in $(getent passwd | grep sashi | cut -d: -f1 2>/dev/null); do
    if [[ -n "$user" ]]; then
        CONTAINERS=$(sudo -u "$user" docker ps -q 2>/dev/null | wc -l)
        echo "  $user: $CONTAINERS containers"
        TOTAL_CONTAINERS=$((TOTAL_CONTAINERS + CONTAINERS))
    fi
done
echo "  Total running containers: $TOTAL_CONTAINERS"

echo ""
echo -e "${YELLOW}Host configuration check:${NC}"
echo -e "${GREEN}Host config directories:${NC}"
ls -la /home/*/evernode-host 2>/dev/null | head -5 || echo "  No config directories found"

echo -e "${GREEN}Host registration files:${NC}"
find /home -name ".host-reg-token" 2>/dev/null | head -3 || echo "  No registration tokens found"

echo ""
echo -e "${YELLOW}Testing API directly:${NC}"
if [[ -f "/var/www/html/api/instance-count.php" ]]; then
    echo -e "${GREEN}API file exists, testing...${NC}"
    php /var/www/html/api/instance-count.php 2>/dev/null | jq . 2>/dev/null || php /var/www/html/api/instance-count.php 2>/dev/null || echo "  API execution failed"
else
    echo -e "${RED}API file not found at /var/www/html/api/instance-count.php${NC}"
fi

echo ""
echo -e "${YELLOW}Testing HTTP API:${NC}"
HTTP_RESPONSE=$(curl -s -w "%{http_code}" http://localhost/api/instance-count.php 2>/dev/null)
HTTP_CODE="${HTTP_RESPONSE: -3}"
HTTP_BODY="${HTTP_RESPONSE%???}"

if [[ "$HTTP_CODE" == "200" ]]; then
    echo -e "${GREEN}✅ HTTP API working (Status: $HTTP_CODE)${NC}"
    echo "$HTTP_BODY" | jq . 2>/dev/null || echo "$HTTP_BODY"
else
    echo -e "${RED}❌ HTTP API failed (Status: $HTTP_CODE)${NC}"
    echo "Response: $HTTP_BODY"
fi

echo ""
echo -e "${YELLOW}Web server status:${NC}"
echo -e "${GREEN}Nginx status:${NC}"
systemctl is-active nginx 2>/dev/null || echo "  Nginx not running"

echo -e "${GREEN}PHP-FPM status:${NC}"
systemctl is-active php*-fpm 2>/dev/null || echo "  PHP-FPM not running"

echo ""
echo -e "${BLUE}📊 Summary:${NC}"
echo -e "${GREEN}• Sashimono users: $SASHI_COUNT${NC}"
echo -e "${GREEN}• Running containers: $TOTAL_CONTAINERS${NC}"
echo -e "${GREEN}• API status: $([ "$HTTP_CODE" == "200" ] && echo "Working" || echo "Failed")${NC}"
echo -e "${GREEN}• Data accuracy: $([ "$TOTAL
